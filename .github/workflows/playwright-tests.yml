name: CI/CD Pipeline for Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  playwrighttests:
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright:v1.47.2-focal
      env:
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Install wait-on
      run: npm install wait-on --save-dev  # Ensures wait-on is installed

    # Kill any process using port 2221 (cleanup before starting server)
    - name: Ensure port 2221 is free
      run: |
        sudo fuser -k 2221/tcp || echo "Port 2221 is free"

    - name: Start application
      run: |
        chmod +x ./binaries/shopping-store-linux-amd64  # Corrected path to the binary inside the repo
        ./binaries/shopping-store-linux-amd64 > server.log 2>&1 &  # Start the binary and log output
      timeout-minutes: 5
      env:
        NODE_ENV: production

    # Increased timeout to allow the server more time to start
    - name: Wait for server to start
      run: npx wait-on http://localhost:2221 --timeout=600000  # 10 minutes

    - name: Check server health
      run: |
        for i in {1..10}; do
          curl -f http://localhost:2221/ && break || sleep 5;
        done || exit 1

    # Display server logs for debugging purposes
    - name: Display server logs (for debugging)
      run: cat server.log

    # Environment variable to fix Firefox issue
    - name: Run Playwright tests
      env:
        HOME: /root  # Fix for running Firefox headless in GitHub Actions
      run: npx playwright test --timeout=60000

    # Generate Playwright report but do not serve it on localhost
    - name: Generate Playwright report
      run: npx playwright generate-report

    # Upload Playwright report
    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report

    # Fix permissions for results.xml (JUnit report)
    - name: Fix permissions for results.xml
      run: sudo chmod 777 results.xml

    # Upload Test Results (JUnit)
    - name: Upload Test Results (JUnit)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: results.xml

    # Improved cleanup step
    - name: Clean up
      if: always()
      run: |
        jobs=$(jobs -p)
        if [ -n "$jobs" ]; then
          kill $jobs || echo "No background processes to kill"
        fi
        pkill -f shopping-store-linux-amd64 || true  # Ensure the app is terminated
        echo "Cleanup complete"
